Note to firstTimers: 
This was created for AY17/18S2 of 2040C by CEG class of 2021, NUS. 
Please do contribute if you know the answers, or opn up a comment thread if you want to discuss. 
Note that we might have minor differences in syllabi, thus leading to blank answers. Enjoy! -- SUM 

Section 1
---------
1. ???
2. Prim's and Kruskal's - O(ELogV); BFS/DFS - O(V+E); Bellman - O(VE)
3. 1. O(V+E)
   2. O(V)
   3. O(V+E)
   4. O(V)
   5. O((V+E)LogE)
   6. O(VLogV)
4. 1. Modified Djikstra's O(ELogV)
   2. Modified Djikstra's O(ELogV)
   3. TopoSort+DFS O(V+E)
   4. ???

Section 2
---------
1. False. Greedy algorithm. Will go on forever. 
2. False. Preprocess into ADjacency matrix and then run BF. O(V^2 + VE)
3. Confused by the Question. BF Killer considered O(VE)?
4. False. Make a test tree. 
5. True. Order will be different, but both algorithms will find all certices in the particular connected component. 

Section 3
---------
3.1: Adjacency List. You can easily list all friends of a single person in O(1) lookup. 
3.2: ???
3.3.1: Vertices are the squares. Edges with other squares it can travel to from that square. Weights represent cost of travel. Max vertices = MN, Max Edges ~ 4MN. Graph problem to solve is SSSP. I will use Modified Djikstra's

3.3.2: Full solution
	(3 mark version)
	1. Take the grid. Start constructing a graph model (adjacency List)
	2. Make an edge between every other square you can visit, with a weight of 3. 
	3. Run djikstra and you will get 3 marks.

	4. Attempt at the rest: 
		a. Add an extra parameter to the entry in PQ that says which direction you are facing when you made the move. When adding distances, Djikstra takes into account this direction, and which diretion it moves. 
(is this algorthm fool proof?)
